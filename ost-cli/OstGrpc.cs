// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ost.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class AudioControlService
{
  static readonly string __ServiceName = "AudioControlService";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::ExitCommand> __Marshaller_ExitCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ExitCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::ServerResponse> __Marshaller_ServerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ServerResponse.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::PlayCommand> __Marshaller_PlayCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PlayCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::PauseCommand> __Marshaller_PauseCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PauseCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SetTimeScrubCommand> __Marshaller_SetTimeScrubCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SetTimeScrubCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SetVolumeCommand> __Marshaller_SetVolumeCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SetVolumeCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::NextClipCommand> __Marshaller_NextClipCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NextClipCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::NextSongletCommand> __Marshaller_NextSongletCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NextSongletCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::NextSongCommand> __Marshaller_NextSongCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NextSongCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::PrevClipCommand> __Marshaller_PrevClipCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PrevClipCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::PrevSongletCommand> __Marshaller_PrevSongletCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PrevSongletCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::PrevSongCommand> __Marshaller_PrevSongCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PrevSongCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SetClipCommand> __Marshaller_SetClipCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SetClipCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SetSongletCommand> __Marshaller_SetSongletCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SetSongletCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SetSongCommand> __Marshaller_SetSongCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SetSongCommand.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SetAlbumCommand> __Marshaller_SetAlbumCommand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SetAlbumCommand.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::ExitCommand, global::ServerResponse> __Method_Exit = new grpc::Method<global::ExitCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "Exit",
      __Marshaller_ExitCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::PlayCommand, global::ServerResponse> __Method_Play = new grpc::Method<global::PlayCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "Play",
      __Marshaller_PlayCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::PauseCommand, global::ServerResponse> __Method_Pause = new grpc::Method<global::PauseCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "Pause",
      __Marshaller_PauseCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::SetTimeScrubCommand, global::ServerResponse> __Method_SetTimeScrub = new grpc::Method<global::SetTimeScrubCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "SetTimeScrub",
      __Marshaller_SetTimeScrubCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::SetVolumeCommand, global::ServerResponse> __Method_SetVolume = new grpc::Method<global::SetVolumeCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "SetVolume",
      __Marshaller_SetVolumeCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::NextClipCommand, global::ServerResponse> __Method_NextClip = new grpc::Method<global::NextClipCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "NextClip",
      __Marshaller_NextClipCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::NextSongletCommand, global::ServerResponse> __Method_NextSonglet = new grpc::Method<global::NextSongletCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "NextSonglet",
      __Marshaller_NextSongletCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::NextSongCommand, global::ServerResponse> __Method_NextSong = new grpc::Method<global::NextSongCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "NextSong",
      __Marshaller_NextSongCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::PrevClipCommand, global::ServerResponse> __Method_PrevClip = new grpc::Method<global::PrevClipCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "PrevClip",
      __Marshaller_PrevClipCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::PrevSongletCommand, global::ServerResponse> __Method_PrevSonglet = new grpc::Method<global::PrevSongletCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "PrevSonglet",
      __Marshaller_PrevSongletCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::PrevSongCommand, global::ServerResponse> __Method_PrevSong = new grpc::Method<global::PrevSongCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "PrevSong",
      __Marshaller_PrevSongCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::SetClipCommand, global::ServerResponse> __Method_SetClip = new grpc::Method<global::SetClipCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "SetClip",
      __Marshaller_SetClipCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::SetSongletCommand, global::ServerResponse> __Method_SetSonglet = new grpc::Method<global::SetSongletCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "SetSonglet",
      __Marshaller_SetSongletCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::SetSongCommand, global::ServerResponse> __Method_SetSong = new grpc::Method<global::SetSongCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "SetSong",
      __Marshaller_SetSongCommand,
      __Marshaller_ServerResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::SetAlbumCommand, global::ServerResponse> __Method_SetAlbum = new grpc::Method<global::SetAlbumCommand, global::ServerResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "SetAlbum",
      __Marshaller_SetAlbumCommand,
      __Marshaller_ServerResponse);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::OstReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of AudioControlService</summary>
  [grpc::BindServiceMethod(typeof(AudioControlService), "BindService")]
  public abstract partial class AudioControlServiceBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> Exit(global::ExitCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> Play(global::PlayCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> Pause(global::PauseCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> SetTimeScrub(global::SetTimeScrubCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> SetVolume(global::SetVolumeCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> NextClip(global::NextClipCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> NextSonglet(global::NextSongletCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> NextSong(global::NextSongCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> PrevClip(global::PrevClipCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> PrevSonglet(global::PrevSongletCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> PrevSong(global::PrevSongCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> SetClip(global::SetClipCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> SetSonglet(global::SetSongletCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> SetSong(global::SetSongCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ServerResponse> SetAlbum(global::SetAlbumCommand request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for AudioControlService</summary>
  public partial class AudioControlServiceClient : grpc::ClientBase<AudioControlServiceClient>
  {
    /// <summary>Creates a new client for AudioControlService</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public AudioControlServiceClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for AudioControlService that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public AudioControlServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected AudioControlServiceClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected AudioControlServiceClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse Exit(global::ExitCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return Exit(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse Exit(global::ExitCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_Exit, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> ExitAsync(global::ExitCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return ExitAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> ExitAsync(global::ExitCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_Exit, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse Play(global::PlayCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return Play(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse Play(global::PlayCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_Play, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PlayAsync(global::PlayCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return PlayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PlayAsync(global::PlayCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_Play, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse Pause(global::PauseCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return Pause(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse Pause(global::PauseCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_Pause, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PauseAsync(global::PauseCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return PauseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PauseAsync(global::PauseCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_Pause, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetTimeScrub(global::SetTimeScrubCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetTimeScrub(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetTimeScrub(global::SetTimeScrubCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_SetTimeScrub, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetTimeScrubAsync(global::SetTimeScrubCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetTimeScrubAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetTimeScrubAsync(global::SetTimeScrubCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_SetTimeScrub, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetVolume(global::SetVolumeCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetVolume(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetVolume(global::SetVolumeCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_SetVolume, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetVolumeAsync(global::SetVolumeCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetVolumeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetVolumeAsync(global::SetVolumeCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_SetVolume, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse NextClip(global::NextClipCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return NextClip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse NextClip(global::NextClipCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_NextClip, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> NextClipAsync(global::NextClipCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return NextClipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> NextClipAsync(global::NextClipCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_NextClip, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse NextSonglet(global::NextSongletCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return NextSonglet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse NextSonglet(global::NextSongletCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_NextSonglet, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> NextSongletAsync(global::NextSongletCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return NextSongletAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> NextSongletAsync(global::NextSongletCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_NextSonglet, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse NextSong(global::NextSongCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return NextSong(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse NextSong(global::NextSongCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_NextSong, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> NextSongAsync(global::NextSongCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return NextSongAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> NextSongAsync(global::NextSongCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_NextSong, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse PrevClip(global::PrevClipCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return PrevClip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse PrevClip(global::PrevClipCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_PrevClip, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PrevClipAsync(global::PrevClipCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return PrevClipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PrevClipAsync(global::PrevClipCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_PrevClip, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse PrevSonglet(global::PrevSongletCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return PrevSonglet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse PrevSonglet(global::PrevSongletCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_PrevSonglet, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PrevSongletAsync(global::PrevSongletCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return PrevSongletAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PrevSongletAsync(global::PrevSongletCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_PrevSonglet, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse PrevSong(global::PrevSongCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return PrevSong(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse PrevSong(global::PrevSongCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_PrevSong, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PrevSongAsync(global::PrevSongCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return PrevSongAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> PrevSongAsync(global::PrevSongCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_PrevSong, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetClip(global::SetClipCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetClip(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetClip(global::SetClipCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_SetClip, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetClipAsync(global::SetClipCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetClipAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetClipAsync(global::SetClipCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_SetClip, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetSonglet(global::SetSongletCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetSonglet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetSonglet(global::SetSongletCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_SetSonglet, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetSongletAsync(global::SetSongletCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetSongletAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetSongletAsync(global::SetSongletCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_SetSonglet, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetSong(global::SetSongCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetSong(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetSong(global::SetSongCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_SetSong, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetSongAsync(global::SetSongCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetSongAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetSongAsync(global::SetSongCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_SetSong, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetAlbum(global::SetAlbumCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetAlbum(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ServerResponse SetAlbum(global::SetAlbumCommand request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_SetAlbum, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetAlbumAsync(global::SetAlbumCommand request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SetAlbumAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ServerResponse> SetAlbumAsync(global::SetAlbumCommand request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_SetAlbum, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected override AudioControlServiceClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new AudioControlServiceClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(AudioControlServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_Exit, serviceImpl.Exit)
        .AddMethod(__Method_Play, serviceImpl.Play)
        .AddMethod(__Method_Pause, serviceImpl.Pause)
        .AddMethod(__Method_SetTimeScrub, serviceImpl.SetTimeScrub)
        .AddMethod(__Method_SetVolume, serviceImpl.SetVolume)
        .AddMethod(__Method_NextClip, serviceImpl.NextClip)
        .AddMethod(__Method_NextSonglet, serviceImpl.NextSonglet)
        .AddMethod(__Method_NextSong, serviceImpl.NextSong)
        .AddMethod(__Method_PrevClip, serviceImpl.PrevClip)
        .AddMethod(__Method_PrevSonglet, serviceImpl.PrevSonglet)
        .AddMethod(__Method_PrevSong, serviceImpl.PrevSong)
        .AddMethod(__Method_SetClip, serviceImpl.SetClip)
        .AddMethod(__Method_SetSonglet, serviceImpl.SetSonglet)
        .AddMethod(__Method_SetSong, serviceImpl.SetSong)
        .AddMethod(__Method_SetAlbum, serviceImpl.SetAlbum).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, AudioControlServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_Exit, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ExitCommand, global::ServerResponse>(serviceImpl.Exit));
    serviceBinder.AddMethod(__Method_Play, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PlayCommand, global::ServerResponse>(serviceImpl.Play));
    serviceBinder.AddMethod(__Method_Pause, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PauseCommand, global::ServerResponse>(serviceImpl.Pause));
    serviceBinder.AddMethod(__Method_SetTimeScrub, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SetTimeScrubCommand, global::ServerResponse>(serviceImpl.SetTimeScrub));
    serviceBinder.AddMethod(__Method_SetVolume, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SetVolumeCommand, global::ServerResponse>(serviceImpl.SetVolume));
    serviceBinder.AddMethod(__Method_NextClip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NextClipCommand, global::ServerResponse>(serviceImpl.NextClip));
    serviceBinder.AddMethod(__Method_NextSonglet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NextSongletCommand, global::ServerResponse>(serviceImpl.NextSonglet));
    serviceBinder.AddMethod(__Method_NextSong, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NextSongCommand, global::ServerResponse>(serviceImpl.NextSong));
    serviceBinder.AddMethod(__Method_PrevClip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PrevClipCommand, global::ServerResponse>(serviceImpl.PrevClip));
    serviceBinder.AddMethod(__Method_PrevSonglet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PrevSongletCommand, global::ServerResponse>(serviceImpl.PrevSonglet));
    serviceBinder.AddMethod(__Method_PrevSong, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::PrevSongCommand, global::ServerResponse>(serviceImpl.PrevSong));
    serviceBinder.AddMethod(__Method_SetClip, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SetClipCommand, global::ServerResponse>(serviceImpl.SetClip));
    serviceBinder.AddMethod(__Method_SetSonglet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SetSongletCommand, global::ServerResponse>(serviceImpl.SetSonglet));
    serviceBinder.AddMethod(__Method_SetSong, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SetSongCommand, global::ServerResponse>(serviceImpl.SetSong));
    serviceBinder.AddMethod(__Method_SetAlbum, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SetAlbumCommand, global::ServerResponse>(serviceImpl.SetAlbum));
  }

}
public static partial class MediaInfoService
{
  static readonly string __ServiceName = "MediaInfoService";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Empty> __Marshaller_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Empty.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::OstInfoResponse> __Marshaller_OstInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OstInfoResponse.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::AlbumInfoRequest> __Marshaller_AlbumInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumInfoRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::AlbumInfoResponse> __Marshaller_AlbumInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumInfoResponse.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SongInfoRequest> __Marshaller_SongInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SongInfoRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SongInfoResponse> __Marshaller_SongInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SongInfoResponse.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SongletInfoRequest> __Marshaller_SongletInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SongletInfoRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::SongletInfoResponse> __Marshaller_SongletInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SongletInfoResponse.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::ClipInfoRequest> __Marshaller_ClipInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ClipInfoRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::ClipInfoResponse> __Marshaller_ClipInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ClipInfoResponse.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::AlbumArtRequest> __Marshaller_AlbumArtRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumArtRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::AlbumArtResponse> __Marshaller_AlbumArtResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AlbumArtResponse.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::Empty, global::OstInfoResponse> __Method_GetOstInfo = new grpc::Method<global::Empty, global::OstInfoResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetOstInfo",
      __Marshaller_Empty,
      __Marshaller_OstInfoResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::AlbumInfoRequest, global::AlbumInfoResponse> __Method_GetAlbumInfo = new grpc::Method<global::AlbumInfoRequest, global::AlbumInfoResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetAlbumInfo",
      __Marshaller_AlbumInfoRequest,
      __Marshaller_AlbumInfoResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::SongInfoRequest, global::SongInfoResponse> __Method_GetSongInfo = new grpc::Method<global::SongInfoRequest, global::SongInfoResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetSongInfo",
      __Marshaller_SongInfoRequest,
      __Marshaller_SongInfoResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::SongletInfoRequest, global::SongletInfoResponse> __Method_GetSongletInfo = new grpc::Method<global::SongletInfoRequest, global::SongletInfoResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetSongletInfo",
      __Marshaller_SongletInfoRequest,
      __Marshaller_SongletInfoResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::ClipInfoRequest, global::ClipInfoResponse> __Method_GetClipInfo = new grpc::Method<global::ClipInfoRequest, global::ClipInfoResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetClipInfo",
      __Marshaller_ClipInfoRequest,
      __Marshaller_ClipInfoResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::AlbumArtRequest, global::AlbumArtResponse> __Method_GetAlbumArt = new grpc::Method<global::AlbumArtRequest, global::AlbumArtResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetAlbumArt",
      __Marshaller_AlbumArtRequest,
      __Marshaller_AlbumArtResponse);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::OstReflection.Descriptor.Services[1]; }
  }

  /// <summary>Base class for server-side implementations of MediaInfoService</summary>
  [grpc::BindServiceMethod(typeof(MediaInfoService), "BindService")]
  public abstract partial class MediaInfoServiceBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::OstInfoResponse> GetOstInfo(global::Empty request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::AlbumInfoResponse> GetAlbumInfo(global::AlbumInfoRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::SongInfoResponse> GetSongInfo(global::SongInfoRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::SongletInfoResponse> GetSongletInfo(global::SongletInfoRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::ClipInfoResponse> GetClipInfo(global::ClipInfoRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::AlbumArtResponse> GetAlbumArt(global::AlbumArtRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for MediaInfoService</summary>
  public partial class MediaInfoServiceClient : grpc::ClientBase<MediaInfoServiceClient>
  {
    /// <summary>Creates a new client for MediaInfoService</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public MediaInfoServiceClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for MediaInfoService that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public MediaInfoServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected MediaInfoServiceClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected MediaInfoServiceClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::OstInfoResponse GetOstInfo(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetOstInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::OstInfoResponse GetOstInfo(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetOstInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::OstInfoResponse> GetOstInfoAsync(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetOstInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::OstInfoResponse> GetOstInfoAsync(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetOstInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::AlbumInfoResponse GetAlbumInfo(global::AlbumInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAlbumInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::AlbumInfoResponse GetAlbumInfo(global::AlbumInfoRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetAlbumInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::AlbumInfoResponse> GetAlbumInfoAsync(global::AlbumInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAlbumInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::AlbumInfoResponse> GetAlbumInfoAsync(global::AlbumInfoRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetAlbumInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::SongInfoResponse GetSongInfo(global::SongInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetSongInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::SongInfoResponse GetSongInfo(global::SongInfoRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetSongInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::SongInfoResponse> GetSongInfoAsync(global::SongInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetSongInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::SongInfoResponse> GetSongInfoAsync(global::SongInfoRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetSongInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::SongletInfoResponse GetSongletInfo(global::SongletInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetSongletInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::SongletInfoResponse GetSongletInfo(global::SongletInfoRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetSongletInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::SongletInfoResponse> GetSongletInfoAsync(global::SongletInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetSongletInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::SongletInfoResponse> GetSongletInfoAsync(global::SongletInfoRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetSongletInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ClipInfoResponse GetClipInfo(global::ClipInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetClipInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::ClipInfoResponse GetClipInfo(global::ClipInfoRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetClipInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ClipInfoResponse> GetClipInfoAsync(global::ClipInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetClipInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::ClipInfoResponse> GetClipInfoAsync(global::ClipInfoRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetClipInfo, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::AlbumArtResponse GetAlbumArt(global::AlbumArtRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAlbumArt(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::AlbumArtResponse GetAlbumArt(global::AlbumArtRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_GetAlbumArt, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::AlbumArtResponse> GetAlbumArtAsync(global::AlbumArtRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return GetAlbumArtAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::AlbumArtResponse> GetAlbumArtAsync(global::AlbumArtRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_GetAlbumArt, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected override MediaInfoServiceClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new MediaInfoServiceClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(MediaInfoServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_GetOstInfo, serviceImpl.GetOstInfo)
        .AddMethod(__Method_GetAlbumInfo, serviceImpl.GetAlbumInfo)
        .AddMethod(__Method_GetSongInfo, serviceImpl.GetSongInfo)
        .AddMethod(__Method_GetSongletInfo, serviceImpl.GetSongletInfo)
        .AddMethod(__Method_GetClipInfo, serviceImpl.GetClipInfo)
        .AddMethod(__Method_GetAlbumArt, serviceImpl.GetAlbumArt).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, MediaInfoServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_GetOstInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Empty, global::OstInfoResponse>(serviceImpl.GetOstInfo));
    serviceBinder.AddMethod(__Method_GetAlbumInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlbumInfoRequest, global::AlbumInfoResponse>(serviceImpl.GetAlbumInfo));
    serviceBinder.AddMethod(__Method_GetSongInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SongInfoRequest, global::SongInfoResponse>(serviceImpl.GetSongInfo));
    serviceBinder.AddMethod(__Method_GetSongletInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SongletInfoRequest, global::SongletInfoResponse>(serviceImpl.GetSongletInfo));
    serviceBinder.AddMethod(__Method_GetClipInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ClipInfoRequest, global::ClipInfoResponse>(serviceImpl.GetClipInfo));
    serviceBinder.AddMethod(__Method_GetAlbumArt, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AlbumArtRequest, global::AlbumArtResponse>(serviceImpl.GetAlbumArt));
  }

}
public static partial class OstUpdateService
{
  static readonly string __ServiceName = "OstUpdateService";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Empty> __Marshaller_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Empty.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::OstUpdateEvent> __Marshaller_OstUpdateEvent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::OstUpdateEvent.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::Empty, global::OstUpdateEvent> __Method_SubscribeToUpdates = new grpc::Method<global::Empty, global::OstUpdateEvent>(
      grpc::MethodType.ServerStreaming,
      __ServiceName,
      "SubscribeToUpdates",
      __Marshaller_Empty,
      __Marshaller_OstUpdateEvent);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::OstReflection.Descriptor.Services[2]; }
  }

  /// <summary>Base class for server-side implementations of OstUpdateService</summary>
  [grpc::BindServiceMethod(typeof(OstUpdateService), "BindService")]
  public abstract partial class OstUpdateServiceBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task SubscribeToUpdates(global::Empty request, grpc::IServerStreamWriter<global::OstUpdateEvent> responseStream, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for OstUpdateService</summary>
  public partial class OstUpdateServiceClient : grpc::ClientBase<OstUpdateServiceClient>
  {
    /// <summary>Creates a new client for OstUpdateService</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public OstUpdateServiceClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for OstUpdateService that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public OstUpdateServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected OstUpdateServiceClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected OstUpdateServiceClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncServerStreamingCall<global::OstUpdateEvent> SubscribeToUpdates(global::Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return SubscribeToUpdates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncServerStreamingCall<global::OstUpdateEvent> SubscribeToUpdates(global::Empty request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncServerStreamingCall(__Method_SubscribeToUpdates, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected override OstUpdateServiceClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new OstUpdateServiceClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(OstUpdateServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_SubscribeToUpdates, serviceImpl.SubscribeToUpdates).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, OstUpdateServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_SubscribeToUpdates, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Empty, global::OstUpdateEvent>(serviceImpl.SubscribeToUpdates));
  }

}
#endregion
